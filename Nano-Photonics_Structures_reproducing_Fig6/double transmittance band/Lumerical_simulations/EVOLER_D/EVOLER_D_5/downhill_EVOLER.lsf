# Copyright 2022, All Rights Reserved
# Code by Bin Li & Ziping Wei
sigma=0.5;                    			#shrink coefficient
alpha=1;   					#reflection coefficient
beta=2;						#expansion coefficient
gamma=0.5;					#constraction coefficient

gen=30;                     			#The number of iterations.
                			#The number of particles.
tar=readdata('data_double_peak.txt');                    #The targeted response 
result=matrix(1,gen);

# [30,60,75,75,150] is the center of reconstructed attention subspace by our EVOLER method, which is saved in 'index_2_est'
popcen=[30,60,75,75,150];  
popmin=popcen-15;         
popmax=popcen+15; 
M=5;  
sizepop=M+1;             
trans_result=matrix(sizepop,201);
trans_Vr=matrix(1,201);
trans_Ve=matrix(1,201);
trans_Vc=matrix(1,201);
pop=matrix(sizepop,M);
pop(1,:)=[30,60,75,75,150];
pop_temp=pop;
for(ii=2:sizepop){     
    pop(ii,:)=pop(ii-1,:);
    pop(ii,ii-1)=round(pop(ii-1,ii-1)+15*(1-2*rand));
}
fitness=matrix(1,sizepop);
fitness_temp=fitness;
for(ii=1:sizepop){
    ?ii;
    del('d.txt');
    d=[pop(ii,1:M),pop(ii,M-1:-1:1)];    
    d=[d,d];
    write('d.txt',num2str(d));
    switchtolayout;    
    select('structure group');    
    runsetup;
    select('mesh');
    set('x min',-(sum(d)*1e-9));
    run;
    temp=getresult('transmission','T');
    trans_result(ii,1:201)=-pinch(temp.T);
    fitness(1,ii)=sum(abs(tar-trans_result(ii,1:201)),2);
}
matlabput(fitness);
matlab("
    [new_fitness,inddd]=sort(fitness,'descend');
    ");
matlabget(inddd);
indd=inddd;
pop_temp=pop;
fitness_temp=fitness;
trans_result_temp=trans_result;
for(ii=1:sizepop)#sort in descending order of fitness
{
    pop(ii,:)=pop_temp(indd(ii),:);
    fitness(ii)=fitness_temp(indd(ii));
    trans_result(ii,:)=trans_result_temp(indd(ii),:);
}
?fitness;   
matlabsave('EVOLER_d-result0',pop,fitness,trans_result);
matlabput(fitness);
fitnessgbest=fitness(sizepop);
gbest=pop(sizepop,:);
for (ii=1:gen)
{
    ?ii;    
    Vh=round(pop(1,:));#the worst position and worst fitness
    fit_Vh=fitness(1);
    Vl=round(pop(sizepop,:));#the best position and best fitness
    fit_Vl=fitness(sizepop);
    matlabput(pop);
    matlab("
        Vxx=mean(pop(2:end,:),1);
        ");
    matlabget(Vxx);
    Vx=Vxx;#centroid
    Vx=round(Vx);
    ?pop;
    ?Vx;
    ?fitness;
    Vr=round(Vx+alpha*(Vx-Vh));#reflection
    for (dd=1:M)
    {
        if(Vr(dd)<popmin(dd))
        {Vr(dd)=popmin(dd);}
        if(Vr(dd)>popmax(dd))
        {Vr(dd)=popmax(dd);}
    }
    del('d.txt');
    d=[Vr,Vr(1,M-1:-1:1)];  
    d=[d,d];        
    write('d.txt',num2str(d));
    switchtolayout;    
    select('structure group');    
    runsetup;
    select('mesh');
    set('x min',-(sum(d)*1e-9));
    run;
    temp=getresult('transmission','T');
    trans_Vr(1,1:201)=-pinch(temp.T);
    fit_Vr=sum(abs(tar-trans_Vr(1,1:201)),2);#fitness of reflection
    
    if (fit_Vr<=fit_Vl)
    {
        Ve=round(Vx+beta*(Vr-Vx));#expansion
        for (dd=1:M)
        {
            if (Ve(dd)<popmin(dd))
            {Ve(dd)=popmin(dd);}
            if (Ve(dd)>popmax(dd))
            {Ve(dd)=popmax(dd);}
        }
        del('d.txt');
        d=[Ve,Ve(1,M-1:-1:1)];
        d=[d,d];
        write('d.txt',num2str(d));
        switchtolayout;    
        select('structure group');    
        runsetup;
        select('mesh');
        set('x min',-(sum(d)*1e-9));
        run;
        temp=getresult('transmission','T');
        trans_Ve(1,1:201)=-pinch(temp.T);
        fit_Ve=sum(abs(tar-trans_Ve(1,1:201)),2);#fitness of expansion
        if (fit_Ve<fit_Vl)#replace the worst position with Ve or Vl
        {
            pop(1,:)=Ve;
            fitness(1)=fit_Ve;
            trans_result(1,:)=trans_Ve;
        }
        else
        {
            pop(1,:)=Vr;
            fitness(1)=fit_Vr;
            trans_result(1,:)=trans_Vr;
        }
    }
    
    else if(fit_Vr<fitness(2))
    {
        pop(1,:)=Vr;
        fitness(1)=fit_Vr;
        trans_result(1,1:201)=trans_Vr;
    }
    else if(fit_Vr<=fit_Vh)#construction
    {
        Vc=round(Vx+gamma*(Vr-Vx));
        for(dd=1:M)
        {
            if (Vc(dd)<popmin(dd))
            {Vc(dd)=popmin(dd);}
            if (Vc(dd)>popmax(dd))
            {Vc(dd)=popmax(dd);}            
        }
        del('d.txt');
        d=[Vc,Vc(1,M-1:-1:1)];
        d=[d,d];  
        write('d.txt',num2str(d));
        switchtolayout;    
        select('structure group');    
        runsetup;
        select('mesh');
        set('x min',-(sum(d)*1e-9));
        run;
        temp=getresult('transmission','T');
        trans_Vc(1,1:201)=-pinch(temp.T);
        fit_Vc=sum(abs(tar-trans_Vc(1,1:201)),2);#fitness of construction
        if (fit_Vc<fit_Vh)#replace the worst position with Vc
        {
            pop(1,:)=Vc;
            fitness(1)=fit_Vc;
            trans_result(1,:)=trans_Vc;
        }
        else#Shrink
        {
            for(jj=1:(sizepop-1))
            {
                pop(jj,:)=round( pop(sizepop,:)+sigma*(pop(jj,:)-pop(sizepop,:)) );
                for(dd=1:M)
                {
                    if(pop(jj,dd)<popmin(dd))
                    {pop(jj,dd)=popmin(dd);}
                    if(pop(jj,dd)>popmax(dd))
                    {pop(jj,dd)=popmax(dd);}
                }
                del('d.txt');
                d=[pop(jj,1:M),pop(jj,M-1:-1:1)];    
                d=[d,d];        
                write('d.txt',num2str(d));
                switchtolayout;    
                select('structure group');    
                runsetup;
                select('mesh');
                set('x min',-(sum(d)*1e-9));
                run;
                temp=getresult('transmission','T');
                trans_result(jj,:)=-pinch(temp.T);
                fitness(jj)=sum(abs(tar-trans_result(jj,1:201)),2);
            }
        }
    }
    else
    {
        Vc=round(Vx+gamma*(Vh-Vx));#construction
        for (dd=1:M)
        {
            if(Vc(dd)<popmin(dd))
            {Vc(dd)=popmin(dd);}
            if(Vc(dd)>popmax(dd))
            {Vc(dd)=popmax(dd);}
        }
        del('d.txt');
        d=[Vc,Vc(1,M-1:-1:1)];
        d=[d,d];
        write('d.txt',num2str(d));
        switchtolayout;    
        select('structure group');    
        runsetup;
        select('mesh');
        set('x min',-(sum(d)*1e-9));
        run;
        temp=getresult('transmission','T');
        trans_Vc(1,:)=-pinch(temp.T);
        fit_Vc=sum(abs(tar-trans_Vc(1,1:201)),2);
        if(fit_Vc<fit_Vh)
        {
            pop(1,:)=Vc;
            fitness(1)=fit_Vc;
            trans_result(1,1:201)=trans_Vc;
        }
        else#shrink
        {
            for (jj=1:(sizepop-1))
            {
                pop(jj,:)=round(pop(sizepop,:)+sigma*(pop(jj,:)-pop(sizepop,:)));
                for(dd=1:M)
                {
                    if(pop(jj,dd)<popmin(dd))
                    {pop(jj,dd)=popmin(dd);}
                    if(pop(jj,dd)>popmax(dd))
                    {pop(jj,dd)=popmax(dd);}
                }
                del('d.txt');
                d=[pop(jj,1:M),pop(jj,M-1:-1:1)];    
                d=[d,d];        
                write('d.txt',num2str(d));
                switchtolayout;    
                select('structure group');    
                runsetup;
                select('mesh');
                set('x min',-(sum(d)*1e-9));
                run;
                temp=getresult('transmission','T');
                trans_result(jj,:)=-pinch(temp.T);
                fitness(jj)=sum(abs(tar-trans_result(jj,1:201)),2);
            }
        }
    }
    matlabput(fitness);
    matlab("
        [new_fitness,inddd]=sort(fitness,'descend');
        ");
    matlabget(inddd);
    indd=inddd;
    pop_temp=pop;
    fitness_temp=fitness;
    trans_result_temp=trans_result;
    for(jj=1:sizepop)
    {
        pop(jj,:)=pop_temp(indd(jj),:);
        fitness(jj)=fitness_temp(indd(jj));
        trans_result(jj,:)=trans_result_temp(jj,:);
    }
    fitnessgbest=fitness(sizepop);
    gbest=pop(sizepop,:);
    result(ii)=fitnessgbest;
    matlabsave('EVOLER_d-result'+num2str(ii),gbest,fitnessgbest,ii,trans_result,pop,result);
}
matlabsave('result',result,gbest);